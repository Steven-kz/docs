import{_ as a,p as e,q as n,a1 as i}from"./framework-5866ffd3.js";const s={},r=i(`<h2 id="_1-和-的区别" tabindex="-1"><a class="header-anchor" href="#_1-和-的区别" aria-hidden="true">#</a> 1. #{}和\${}的区别？</h2><ul><li>#{}是占位符，预编译处理；\${}是拼接符，字符串替换，没有预编译处理。</li><li>Mybatis在处理#{}时，#{}传入参数是以字符串传入，会将SQL中的#{}替换为?号，调用PreparedStatement的set方法来赋值。</li><li>变量替换后，#{} 对应的变量自动加上单引号 &#39;&#39;；变量替换后，\${} 对应的变量不会加上单引号 &#39;&#39;</li><li>#{} 可以有效的防止SQL注入，提高系统安全性；\${} 不能防止SQL 注入</li><li>#{} 的变量替换是在DBMS 中；\${} 的变量替换是在 DBMS 外</li></ul><h2 id="_2-在mapper中如何传递多个参数" tabindex="-1"><a class="header-anchor" href="#_2-在mapper中如何传递多个参数" aria-hidden="true">#</a> 2. 在Mapper中如何传递多个参数？</h2><p>1、若Dao层函数有多个参数，那么其对应的xml中，<code>#{0}</code>代表接收的是Dao层中的第一个参数，<code>#{1}</code>代表Dao中的第二个参数，以此类推。</p><p>2、使用@Param注解：在Dao层的参数中前加@Param注解,注解内的参数名为传递到Mapper中的参数名。</p><p>3、多个参数封装成Map，以HashMap的形式传递到Mapper中。</p><h2 id="_3-mybatis动态sql有什么用-执行原理是什么-有哪些动态sql" tabindex="-1"><a class="header-anchor" href="#_3-mybatis动态sql有什么用-执行原理是什么-有哪些动态sql" aria-hidden="true">#</a> 3. Mybatis动态sql有什么用？执行原理是什么？有哪些动态sql？</h2><p>Mybatis动态sql可以在xml映射文件内，以标签的形式编写动态sql，执行原理是根据表达式的值完成逻辑判断，并动态拼接sql的功能。</p><p>Mybatis提供了9种动态sql标签：trim、where、set、foreach、if、choose、when、otherwise、bind</p><h2 id="_4-为什么使用mq" tabindex="-1"><a class="header-anchor" href="#_4-为什么使用mq" aria-hidden="true">#</a> 4.为什么使用MQ？</h2><p>使用MQ的场景很多，主要有三个：解耦、异步、削峰。</p><h2 id="_5-消息队列的缺点" tabindex="-1"><a class="header-anchor" href="#_5-消息队列的缺点" aria-hidden="true">#</a> 5.消息队列的缺点</h2><p>1、 系统可用性降低</p><p>系统引入的外部依赖越多，越容易挂掉。</p><p>2、 系统复杂度提高</p><p>加入了消息队列，要多考虑很多方面的问题，比如：一致性问题、如何保证消息不被重复消费、如何保证消息可靠性传输等。因此，需要考虑的东西更多，复杂性增大。</p><p>3、 一致性问题</p><p>A 系统处理完了直接返回成功了，人都以为你这个请求就成功了；但是问题是，要是 BCD 三个系统那里，BD 两个系统写库成功了，结果 C 系统写库失败了，这就数据不一致了。</p><h2 id="_6-如何保证消息的可靠性" tabindex="-1"><a class="header-anchor" href="#_6-如何保证消息的可靠性" aria-hidden="true">#</a> 6.如何保证消息的可靠性？</h2><p>分三点：</p><p>生产者到RabbitMQ：事务机制和Confirm机制，注意：事务机制和 Confirm 机制是互斥的，两者不能共存，会导致 RabbitMQ 报错。 RabbitMQ自身：持久化、集群、普通模式、镜像模式。 RabbitMQ到消费者：basicAck机制、死信队列、消息补偿机制。</p><h2 id="_7-生产者如何将消息可靠投递到rabbitmq" tabindex="-1"><a class="header-anchor" href="#_7-生产者如何将消息可靠投递到rabbitmq" aria-hidden="true">#</a> 7. 生产者如何将消息可靠投递到RabbitMQ？</h2><p>生产者把消息可靠投递到交换机是通过Confirm机制， 交换机中的消息可靠到达Queue队列是通过Return机制。</p><h2 id="_8-rabbitmq如何将消息可靠投递到消费者" tabindex="-1"><a class="header-anchor" href="#_8-rabbitmq如何将消息可靠投递到消费者" aria-hidden="true">#</a> 8. RabbitMQ如何将消息可靠投递到消费者？</h2><p>MQ将消息push给Client（或Client来pull消息）</p><p>Client得到消息并做完业务逻辑</p><p>Client发送Ack消息给MQ，通知MQ删除该消息，此处有可能因为网络问题导致Ack失败，那么Client会重复消息，这里就引出消费幂等的问题；</p><p>MQ将已消费的消息删除。</p><h2 id="_9-签到服务是如何实现的" tabindex="-1"><a class="header-anchor" href="#_9-签到服务是如何实现的" aria-hidden="true">#</a> 9. 签到服务是如何实现的</h2><p>自己总结。。</p><p>题目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>. <span class="token comment">#{}和\${}的区别？</span>
<span class="token number">2</span>. 在Mapper中如何传递多个参数？
<span class="token number">3</span>. Mybatis动态sql有什么用？执行原理是什么？有哪些动态sql？

<span class="token number">4</span>. 为什么使用MQ？
<span class="token number">5</span>. 消息队列的缺点
<span class="token number">6</span>. 如何保证消息的可靠性？

<span class="token number">7</span>. 生产者如何将消息可靠投递到RabbitMQ？
<span class="token number">8</span>. RabbitMQ如何将消息可靠投递到消费者？
<span class="token number">9</span>. 签到服务是如何实现的
是什么？解决什么问题？
用什么技术？
为什么用这个技术实现？
具体怎么实现？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),d=[r];function l(p,t){return e(),n("div",null,d)}const b=a(s,[["render",l],["__file","interview4.html.vue"]]);export{b as default};
