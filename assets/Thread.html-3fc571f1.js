const l=JSON.parse('{"key":"v-314cd808","path":"/interview/Thread.html","title":"Java 并发","lang":"zh-CN","frontmatter":{"title":"Java 并发"},"headers":[{"level":2,"title":"1. 线程和进程有什么区别？","slug":"_1-线程和进程有什么区别","link":"#_1-线程和进程有什么区别","children":[]},{"level":2,"title":"2. 创建线程的三种方式的对比？","slug":"_2-创建线程的三种方式的对比","link":"#_2-创建线程的三种方式的对比","children":[]},{"level":2,"title":"3. 为什么要使用多线程呢?","slug":"_3-为什么要使用多线程呢","link":"#_3-为什么要使用多线程呢","children":[]},{"level":2,"title":"4. 线程的状态流转","slug":"_4-线程的状态流转","link":"#_4-线程的状态流转","children":[]},{"level":2,"title":"5. 什么是线程死锁?如何避免死锁?","slug":"_5-什么是线程死锁-如何避免死锁","link":"#_5-什么是线程死锁-如何避免死锁","children":[{"level":3,"title":"死锁","slug":"死锁","link":"#死锁","children":[]},{"level":3,"title":"死锁必须具备以下四个条件：","slug":"死锁必须具备以下四个条件","link":"#死锁必须具备以下四个条件","children":[]},{"level":3,"title":"如何避免线程死锁?","slug":"如何避免线程死锁","link":"#如何避免线程死锁","children":[]}]},{"level":2,"title":"6. 常见的对比","slug":"_6-常见的对比","link":"#_6-常见的对比","children":[{"level":3,"title":"Runnable VS Callable","slug":"runnable-vs-callable","link":"#runnable-vs-callable","children":[]},{"level":3,"title":"shutdown() VS shutdownNow()","slug":"shutdown-vs-shutdownnow","link":"#shutdown-vs-shutdownnow","children":[]},{"level":3,"title":"isTerminated() VS isShutdown()","slug":"isterminated-vs-isshutdown","link":"#isterminated-vs-isshutdown","children":[]}]},{"level":2,"title":"7. sleep() 方法和 wait() 方法区别和共同点?","slug":"_7-sleep-方法和-wait-方法区别和共同点","link":"#_7-sleep-方法和-wait-方法区别和共同点","children":[{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"相同","slug":"相同","link":"#相同","children":[]}]},{"level":2,"title":"8.为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法","slug":"_8-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法","link":"#_8-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法","children":[]},{"level":2,"title":"9. Thread类中的yield方法有什么作用？","slug":"_9-thread类中的yield方法有什么作用","link":"#_9-thread类中的yield方法有什么作用","children":[]},{"level":2,"title":"10. 谈谈volatile的使用及其原理","slug":"_10-谈谈volatile的使用及其原理","link":"#_10-谈谈volatile的使用及其原理","children":[]},{"level":2,"title":"11. 如何创建线程实例并运行?","slug":"_11-如何创建线程实例并运行","link":"#_11-如何创建线程实例并运行","children":[]},{"level":2,"title":"12. 线程阻塞的三种情况","slug":"_12-线程阻塞的三种情况","link":"#_12-线程阻塞的三种情况","children":[]},{"level":2,"title":"13. 线程死亡的三种方式","slug":"_13-线程死亡的三种方式","link":"#_13-线程死亡的三种方式","children":[]},{"level":2,"title":"14. 为什么我们调用start()方法时会执行run()方法，为什么我们不能直接调用run()方法？","slug":"_14-为什么我们调用start-方法时会执行run-方法-为什么我们不能直接调用run-方法","link":"#_14-为什么我们调用start-方法时会执行run-方法-为什么我们不能直接调用run-方法","children":[]},{"level":2,"title":"15. 守护线程是什么？","slug":"_15-守护线程是什么","link":"#_15-守护线程是什么","children":[]},{"level":2,"title":"16. 了解Fork/Join框架吗？","slug":"_16-了解fork-join框架吗","link":"#_16-了解fork-join框架吗","children":[]},{"level":2,"title":"17. CAS了解吗？","slug":"_17-cas了解吗","link":"#_17-cas了解吗","children":[]},{"level":2,"title":"18. CAS有什么缺陷？","slug":"_18-cas有什么缺陷","link":"#_18-cas有什么缺陷","children":[]},{"level":2,"title":"19. synchronized 和 volatile 的区别是什么？","slug":"_19-synchronized-和-volatile-的区别是什么","link":"#_19-synchronized-和-volatile-的区别是什么","children":[]},{"level":2,"title":"20. synchronized 和 Lock 有什么区别？","slug":"_20-synchronized-和-lock-有什么区别","link":"#_20-synchronized-和-lock-有什么区别","children":[]},{"level":2,"title":"21. synchronized 和 ReentrantLock 区别是什么？","slug":"_21-synchronized-和-reentrantlock-区别是什么","link":"#_21-synchronized-和-reentrantlock-区别是什么","children":[]},{"level":2,"title":"22. synchronized的用法有哪些?","slug":"_22-synchronized的用法有哪些","link":"#_22-synchronized的用法有哪些","children":[]},{"level":2,"title":"23. Synchronized的作用有哪些？","slug":"_23-synchronized的作用有哪些","link":"#_23-synchronized的作用有哪些","children":[]},{"level":2,"title":"24. 说一下 synchronized 底层实现原理？","slug":"_24-说一下-synchronized-底层实现原理","link":"#_24-说一下-synchronized-底层实现原理","children":[]},{"level":2,"title":"25. 多线程中 synchronized 锁升级的原理是什么？","slug":"_25-多线程中-synchronized-锁升级的原理是什么","link":"#_25-多线程中-synchronized-锁升级的原理是什么","children":[]},{"level":2,"title":"26. synchronized 为什么是非公平锁？非公平体现在哪些地方？","slug":"_26-synchronized-为什么是非公平锁-非公平体现在哪些地方","link":"#_26-synchronized-为什么是非公平锁-非公平体现在哪些地方","children":[]},{"level":2,"title":"27. JVM对synchronized的优化有哪些？","slug":"_27-jvm对synchronized的优化有哪些","link":"#_27-jvm对synchronized的优化有哪些","children":[{"level":3,"title":"1. 锁膨胀","slug":"_1-锁膨胀","link":"#_1-锁膨胀","children":[]},{"level":3,"title":"2.锁消除","slug":"_2-锁消除","link":"#_2-锁消除","children":[]},{"level":3,"title":"3. 锁粗化","slug":"_3-锁粗化","link":"#_3-锁粗化","children":[]},{"level":3,"title":"4. 自旋锁与自适应自旋锁","slug":"_4-自旋锁与自适应自旋锁","link":"#_4-自旋锁与自适应自旋锁","children":[]}]},{"level":2,"title":"28. synchronized 锁能降级吗？","slug":"_28-synchronized-锁能降级吗","link":"#_28-synchronized-锁能降级吗","children":[]},{"level":2,"title":"29. ThreadLocal是什么?","slug":"_29-threadlocal是什么","link":"#_29-threadlocal是什么","children":[]},{"level":2,"title":"30. ThreadLocal的实现原理","slug":"_30-threadlocal的实现原理","link":"#_30-threadlocal的实现原理","children":[]},{"level":2,"title":"31. 知道ThreadLocal 内存泄露问题吗？","slug":"_31-知道threadlocal-内存泄露问题吗","link":"#_31-知道threadlocal-内存泄露问题吗","children":[]},{"level":2,"title":"32. 了解ReentrantLock吗？","slug":"_32-了解reentrantlock吗","link":"#_32-了解reentrantlock吗","children":[]},{"level":2,"title":"33. ReadWriteLock是什么？","slug":"_33-readwritelock是什么","link":"#_33-readwritelock是什么","children":[]},{"level":2,"title":"1. 为什么要用线程池？","slug":"_1-为什么要用线程池","link":"#_1-为什么要用线程池","children":[]},{"level":2,"title":"2. 执行execute()方法和submit()方法的区别是什么呢？","slug":"_2-执行execute-方法和submit-方法的区别是什么呢","link":"#_2-执行execute-方法和submit-方法的区别是什么呢","children":[]},{"level":2,"title":"3. 你说下线程池核心参数？","slug":"_3-你说下线程池核心参数","link":"#_3-你说下线程池核心参数","children":[]},{"level":2,"title":"4. 线程池执行任务的流程？","slug":"_4-线程池执行任务的流程","link":"#_4-线程池执行任务的流程","children":[]},{"level":2,"title":"5. 常用的JAVA线程池有哪几种类型？","slug":"_5-常用的java线程池有哪几种类型","link":"#_5-常用的java线程池有哪几种类型","children":[]},{"level":2,"title":"6. 线程池常用的阻塞队列有哪些?","slug":"_6-线程池常用的阻塞队列有哪些","link":"#_6-线程池常用的阻塞队列有哪些","children":[]},{"level":2,"title":"7. 源码中线程池是怎么复用线程的？","slug":"_7-源码中线程池是怎么复用线程的","link":"#_7-源码中线程池是怎么复用线程的","children":[]},{"level":2,"title":"8. 如何合理配置线程池参数？","slug":"_8-如何合理配置线程池参数","link":"#_8-如何合理配置线程池参数","children":[]},{"level":2,"title":"9. Executor和Executors的区别？","slug":"_9-executor和executors的区别","link":"#_9-executor和executors的区别","children":[]},{"level":2,"title":"1. 说一说什么是AQS？","slug":"_1-说一说什么是aqs","link":"#_1-说一说什么是aqs","children":[]},{"level":2,"title":"2. AQS使用了哪些设计模式？","slug":"_2-aqs使用了哪些设计模式","link":"#_2-aqs使用了哪些设计模式","children":[]},{"level":2,"title":"3. 了解AQS中同步队列的数据结构吗？","slug":"_3-了解aqs中同步队列的数据结构吗","link":"#_3-了解aqs中同步队列的数据结构吗","children":[]},{"level":2,"title":"4. 了解AQS 对资源的共享方式吗？","slug":"_4-了解aqs-对资源的共享方式吗","link":"#_4-了解aqs-对资源的共享方式吗","children":[]},{"level":2,"title":"5. AQS 组件了解吗?","slug":"_5-aqs-组件了解吗","link":"#_5-aqs-组件了解吗","children":[]},{"level":2,"title":"1. 介绍一下 Atomic 原子类","slug":"_1-介绍一下-atomic-原子类","link":"#_1-介绍一下-atomic-原子类","children":[]},{"level":2,"title":"2.  JUC 包中的原子类是哪4类？","slug":"_2-juc-包中的原子类是哪4类","link":"#_2-juc-包中的原子类是哪4类","children":[]},{"level":2,"title":"3. 简单介绍一下 AtomicInteger 类的原理","slug":"_3-简单介绍一下-atomicinteger-类的原理","link":"#_3-简单介绍一下-atomicinteger-类的原理","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"updatedTime":1678630251000,"contributors":[{"name":"knightbreeze1","email":"knightbreeze@163.com","commits":1}]},"filePathRelative":"interview/Thread.md"}');export{l as data};
