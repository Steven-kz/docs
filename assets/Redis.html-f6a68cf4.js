const e=JSON.parse('{"key":"v-202643b6","path":"/interview/Redis.html","title":"Redis","lang":"zh-CN","frontmatter":{"title":"Redis"},"headers":[{"level":2,"title":"1. Redis是什么？简述它的优缺点？","slug":"_1-redis是什么-简述它的优缺点","link":"#_1-redis是什么-简述它的优缺点","children":[]},{"level":2,"title":"2. Redis为什么这么快？","slug":"_2-redis为什么这么快","link":"#_2-redis为什么这么快","children":[]},{"level":2,"title":"3. Redis相比Memcached有哪些优势？","slug":"_3-redis相比memcached有哪些优势","link":"#_3-redis相比memcached有哪些优势","children":[]},{"level":2,"title":"4. 为什么要用 Redis 做缓存？","slug":"_4-为什么要用-redis-做缓存","link":"#_4-为什么要用-redis-做缓存","children":[]},{"level":2,"title":"5. 为什么要用 Redis 而不用 map/guava 做缓存?","slug":"_5-为什么要用-redis-而不用-map-guava-做缓存","link":"#_5-为什么要用-redis-而不用-map-guava-做缓存","children":[]},{"level":2,"title":"6. Redis的常用场景有哪些?","slug":"_6-redis的常用场景有哪些","link":"#_6-redis的常用场景有哪些","children":[]},{"level":2,"title":"7. Redis的数据类型有哪些？","slug":"_7-redis的数据类型有哪些","link":"#_7-redis的数据类型有哪些","children":[]},{"level":2,"title":"8. Redis持久化机制？","slug":"_8-redis持久化机制","link":"#_8-redis持久化机制","children":[]},{"level":2,"title":"9. 如何选择合适的持久化方式","slug":"_9-如何选择合适的持久化方式","link":"#_9-如何选择合适的持久化方式","children":[]},{"level":2,"title":"10. Redis持久化数据和缓存怎么做扩容？","slug":"_10-redis持久化数据和缓存怎么做扩容","link":"#_10-redis持久化数据和缓存怎么做扩容","children":[]},{"level":2,"title":"11. Redis过期键的删除策略","slug":"_11-redis过期键的删除策略","link":"#_11-redis过期键的删除策略","children":[]},{"level":2,"title":"12. Redis key的过期时间和永久有效分别怎么设置？","slug":"_12-redis-key的过期时间和永久有效分别怎么设置","link":"#_12-redis-key的过期时间和永久有效分别怎么设置","children":[]},{"level":2,"title":"13. Redis内存淘汰策略","slug":"_13-redis内存淘汰策略","link":"#_13-redis内存淘汰策略","children":[]},{"level":2,"title":"14. 如何保证缓存与数据库双写时的数据一致性？","slug":"_14-如何保证缓存与数据库双写时的数据一致性","link":"#_14-如何保证缓存与数据库双写时的数据一致性","children":[]},{"level":2,"title":"15. 先删除缓存，后更新数据库","slug":"_15-先删除缓存-后更新数据库","link":"#_15-先删除缓存-后更新数据库","children":[{"level":3,"title":"答案一：延时双删","slug":"答案一-延时双删","link":"#答案一-延时双删","children":[]},{"level":3,"title":"答案二： 更新与读取操作进行异步串行化","slug":"答案二-更新与读取操作进行异步串行化","link":"#答案二-更新与读取操作进行异步串行化","children":[]}]},{"level":2,"title":"16. 先更新数据库，后删除缓存","slug":"_16-先更新数据库-后删除缓存","link":"#_16-先更新数据库-后删除缓存","children":[]},{"level":2,"title":"17. 什么是缓存击穿?","slug":"_17-什么是缓存击穿","link":"#_17-什么是缓存击穿","children":[]},{"level":2,"title":"18. 什么是缓存穿透?","slug":"_18-什么是缓存穿透","link":"#_18-什么是缓存穿透","children":[]},{"level":2,"title":"19. 什么是缓存雪崩?","slug":"_19-什么是缓存雪崩","link":"#_19-什么是缓存雪崩","children":[]},{"level":2,"title":"20. 什么是缓存预热?","slug":"_20-什么是缓存预热","link":"#_20-什么是缓存预热","children":[]},{"level":2,"title":"21. 什么是缓存降级？","slug":"_21-什么是缓存降级","link":"#_21-什么是缓存降级","children":[]},{"level":2,"title":"22. Redis为何选择单线程？","slug":"_22-redis为何选择单线程","link":"#_22-redis为何选择单线程","children":[]},{"level":2,"title":"23. Redis真的是单线程？","slug":"_23-redis真的是单线程","link":"#_23-redis真的是单线程","children":[]},{"level":2,"title":"24. Redis 6.0为何引入多线程？","slug":"_24-redis-6-0为何引入多线程","link":"#_24-redis-6-0为何引入多线程","children":[]},{"level":2,"title":"25. Redis 6.0 采用多线程后，性能的提升效果如何？","slug":"_25-redis-6-0-采用多线程后-性能的提升效果如何","link":"#_25-redis-6-0-采用多线程后-性能的提升效果如何","children":[]},{"level":2,"title":"26. 介绍下Redis的线程模型","slug":"_26-介绍下redis的线程模型","link":"#_26-介绍下redis的线程模型","children":[]},{"level":2,"title":"27. Redis 6.0 多线程的实现机制？","slug":"_27-redis-6-0-多线程的实现机制","link":"#_27-redis-6-0-多线程的实现机制","children":[]},{"level":2,"title":"28. Redis 6.0开启多线程后，是否会存在线程并发安全问题？","slug":"_28-redis-6-0开启多线程后-是否会存在线程并发安全问题","link":"#_28-redis-6-0开启多线程后-是否会存在线程并发安全问题","children":[]},{"level":2,"title":"29. Redis 6.0 与 Memcached 多线程模型的对比","slug":"_29-redis-6-0-与-memcached-多线程模型的对比","link":"#_29-redis-6-0-与-memcached-多线程模型的对比","children":[]},{"level":2,"title":"30. Redis事务的概念","slug":"_30-redis事务的概念","link":"#_30-redis事务的概念","children":[]},{"level":2,"title":"31. Redis事务的三个阶段","slug":"_31-redis事务的三个阶段","link":"#_31-redis事务的三个阶段","children":[]},{"level":2,"title":"32. Redis事务相关命令","slug":"_32-redis事务相关命令","link":"#_32-redis事务相关命令","children":[]},{"level":2,"title":"33. Redis事务支持隔离性吗?","slug":"_33-redis事务支持隔离性吗","link":"#_33-redis事务支持隔离性吗","children":[]},{"level":2,"title":"34. Redis为什么不支持事务回滚？","slug":"_34-redis为什么不支持事务回滚","link":"#_34-redis为什么不支持事务回滚","children":[]},{"level":2,"title":"35. Redis事务其他实现","slug":"_35-redis事务其他实现","link":"#_35-redis事务其他实现","children":[]},{"level":2,"title":"36. Redis常见使用方式有哪些？","slug":"_36-redis常见使用方式有哪些","link":"#_36-redis常见使用方式有哪些","children":[]},{"level":2,"title":"37. 介绍下Redis单副本","slug":"_37-介绍下redis单副本","link":"#_37-介绍下redis单副本","children":[]},{"level":2,"title":"38. 介绍下Redis多副本（主从）","slug":"_38-介绍下redis多副本-主从","link":"#_38-介绍下redis多副本-主从","children":[]},{"level":2,"title":"39. 介绍下Redis Sentinel（哨兵）","slug":"_39-介绍下redis-sentinel-哨兵","link":"#_39-介绍下redis-sentinel-哨兵","children":[]},{"level":2,"title":"40. 介绍下Redis Cluster","slug":"_40-介绍下redis-cluster","link":"#_40-介绍下redis-cluster","children":[]},{"level":2,"title":"41. 介绍下Redis自研","slug":"_41-介绍下redis自研","link":"#_41-介绍下redis自研","children":[]},{"level":2,"title":"42. Redis高可用方案具体怎么实施？","slug":"_42-redis高可用方案具体怎么实施","link":"#_42-redis高可用方案具体怎么实施","children":[]},{"level":2,"title":"43. 了解主从复制的原理吗？","slug":"_43-了解主从复制的原理吗","link":"#_43-了解主从复制的原理吗","children":[]},{"level":2,"title":"44. 由于主从延迟导致读取到过期数据怎么处理？","slug":"_44-由于主从延迟导致读取到过期数据怎么处理","link":"#_44-由于主从延迟导致读取到过期数据怎么处理","children":[]},{"level":2,"title":"45. 主从复制的过程中如果因为网络原因停止复制了会怎么样？","slug":"_45-主从复制的过程中如果因为网络原因停止复制了会怎么样","link":"#_45-主从复制的过程中如果因为网络原因停止复制了会怎么样","children":[]},{"level":2,"title":"46. Redis主从架构数据会丢失吗，为什么？","slug":"_46-redis主从架构数据会丢失吗-为什么","link":"#_46-redis主从架构数据会丢失吗-为什么","children":[]},{"level":2,"title":"47. 如何解决主从架构数据丢失的问题？","slug":"_47-如何解决主从架构数据丢失的问题","link":"#_47-如何解决主从架构数据丢失的问题","children":[]},{"level":2,"title":"48. Redis哨兵是怎么工作的？","slug":"_48-redis哨兵是怎么工作的","link":"#_48-redis哨兵是怎么工作的","children":[]},{"level":2,"title":"49. 故障转移时会从剩下的slave选举一个新的master，被选举为master的标准是什么？","slug":"_49-故障转移时会从剩下的slave选举一个新的master-被选举为master的标准是什么","link":"#_49-故障转移时会从剩下的slave选举一个新的master-被选举为master的标准是什么","children":[]},{"level":2,"title":"50. 同步配置的时候其他哨兵根据什么更新自己的配置呢？","slug":"_50-同步配置的时候其他哨兵根据什么更新自己的配置呢","link":"#_50-同步配置的时候其他哨兵根据什么更新自己的配置呢","children":[]},{"level":2,"title":"51. 为什么Redis哨兵集群只有2个节点无法正常工作？","slug":"_51-为什么redis哨兵集群只有2个节点无法正常工作","link":"#_51-为什么redis哨兵集群只有2个节点无法正常工作","children":[]},{"level":2,"title":"52. Redis cluster中是如何实现数据分布的？这种方式有什么优点？","slug":"_52-redis-cluster中是如何实现数据分布的-这种方式有什么优点","link":"#_52-redis-cluster中是如何实现数据分布的-这种方式有什么优点","children":[]},{"level":2,"title":"53. Redis cluster节点间通信是什么机制？","slug":"_53-redis-cluster节点间通信是什么机制","link":"#_53-redis-cluster节点间通信是什么机制","children":[]},{"level":2,"title":"54. 什么是分布式锁？为什么用分布式锁？","slug":"_54-什么是分布式锁-为什么用分布式锁","link":"#_54-什么是分布式锁-为什么用分布式锁","children":[]},{"level":2,"title":"55. 常见的分布式锁有哪些解决方案？","slug":"_55-常见的分布式锁有哪些解决方案","link":"#_55-常见的分布式锁有哪些解决方案","children":[]},{"level":2,"title":"56. Redis实现分布式锁","slug":"_56-redis实现分布式锁","link":"#_56-redis实现分布式锁","children":[{"level":3,"title":"分布式锁的三个核心要素","slug":"分布式锁的三个核心要素","link":"#分布式锁的三个核心要素","children":[]},{"level":3,"title":"上述分布式锁存在的问题","slug":"上述分布式锁存在的问题","link":"#上述分布式锁存在的问题","children":[]}]},{"level":2,"title":"57. 了解RedLock吗？","slug":"_57-了解redlock吗","link":"#_57-了解redlock吗","children":[]},{"level":2,"title":"58. RedLock的原理","slug":"_58-redlock的原理","link":"#_58-redlock的原理","children":[]},{"level":2,"title":"59. Redis如何做内存优化？","slug":"_59-redis如何做内存优化","link":"#_59-redis如何做内存优化","children":[]},{"level":2,"title":"60. 如果现在有个读超高并发的系统，用Redis来抗住大部分读请求，你会怎么设计？","slug":"_60-如果现在有个读超高并发的系统-用redis来抗住大部分读请求-你会怎么设计","link":"#_60-如果现在有个读超高并发的系统-用redis来抗住大部分读请求-你会怎么设计","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"updatedTime":1678630251000,"contributors":[{"name":"knightbreeze1","email":"knightbreeze@163.com","commits":1}]},"filePathRelative":"interview/Redis.md"}');export{e as data};
