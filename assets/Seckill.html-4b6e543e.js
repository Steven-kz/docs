import{_ as n,p as s,q as a,a1 as t}from"./framework-5866ffd3.js";const p={},e=t(`<h1 id="seckill" tabindex="-1"><a class="header-anchor" href="#seckill" aria-hidden="true">#</a> Seckill</h1><h1 id="零、-秒杀的相关知识" tabindex="-1"><a class="header-anchor" href="#零、-秒杀的相关知识" aria-hidden="true">#</a> **零、**秒杀的相关知识</h1><h2 id="_0-1秒杀" tabindex="-1"><a class="header-anchor" href="#_0-1秒杀" aria-hidden="true">#</a> 0.1秒杀</h2><p>秒杀，⼀些平台为了促销降价或者稀缺商品，控制数量，饥饿营销的⼀种销售的⼿段。 特点： （1）低廉价格； （2）⼤幅推⼴； （3）瞬时售空； （4）⼀般是定时上架； （5）时间短、瞬时并发量⾼； （6）稀缺商品 <strong>会给系统带来很⼤QPS,短时间内并发量会急剧上升，如果我们的⽅案做得不到位很有可能会引起服务器 宕机，所以秒杀⼀定独⽴出来</strong></p><h2 id="_0-2-秒杀的分类" tabindex="-1"><a class="header-anchor" href="#_0-2-秒杀的分类" aria-hidden="true">#</a> 0.2 秒杀的分类</h2><p>**1. 平台秒杀（单品秒杀） ** 价格敏感、追求质量且⽆明确⽬标 满⾜单⼈消费需求（个⼈或他⼈） 捡便宜（由“超级秒杀”满⾜） **2. 品牌秒杀 ** 价格敏感、追求质量且⽆明确⽬标 追求品牌，对商品要求相对更⾼ 消费能⼒较强 **3. 平台精选（品类秒杀） ** 价格敏感、追求质量且⽆明确⽬标 **4. 超值量贩（垂直领域） ** 价格敏感、追求质量且⽬标模糊的 满⾜多⼈消费需求（家庭、班级、⼩组等团体） 满⾜个⼈囤货需求（买24卷卫⽣纸囤着）</p><h2 id="_0-3-秒杀的时间节点" tabindex="-1"><a class="header-anchor" href="#_0-3-秒杀的时间节点" aria-hidden="true">#</a> 0.3 秒杀的时间节点</h2><p>**单品秒杀 ** 每天0点~24点，2⼩时⼀场，共12场次。每个场次限时2⼩时，部分商品在2⼩时内折扣很低，错过之 后，恢复原价，或折扣⼒度减⼩。 **超级秒杀 ** 在⾼流量场次（如8点、10点、12点、20点、22点），某⼀单品提供限量超级折扣，如1元购买清扬男 ⼠洗发⽔。 **专⻔的秒杀活动 ** 618、双11、双12等 <strong>⼀次性的秒杀</strong></p><h2 id="_0-4-主流平台的秒杀" tabindex="-1"><a class="header-anchor" href="#_0-4-主流平台的秒杀" aria-hidden="true">#</a> 0.4 主流平台的秒杀</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666334373653-8e043df9-dce1-473d-9fc3-94313ea3e9d3.png#averageHue=%23faede9&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=428&amp;id=u75aa618d&amp;name=image.png&amp;originHeight=535&amp;originWidth=792&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=101087&amp;status=done&amp;style=none&amp;taskId=u2337aa0e-d3df-4583-a432-7b91299660d&amp;title=&amp;width=633.6" alt="image.png"> 现以淘宝、天猫、苏宁易购、拼多多、唯品会、⽹易严选、1号店、⼩⽶有品、⼩红书的APP端业务界⾯ 为参照，做出如下分析。 1）淘宝 聚划算→⼤类tab（仅部分品类）→场景楼层（ 4个基础场景/中类+4个榜单；约24个品/每个⼩tab）→ 商品详情⻚；但是，主界⾯（各板块下属、穿插楼层）⽆明确品类秒杀频道。 有好货→场景馆→内容界⾯→商品详情⻚。 2）天猫 快抢购：只有品牌特卖等，⽆品类秒杀类似功能栏⽬。 聚划算（同淘宝）。 3）苏宁易购 苏宁秒杀→穿插楼层（办公电脑专场）→专场⻚⾯（共20个品）→商品详情⻚。 苏宁秒杀（⾸⻚活动）→⼿机品类会场→商品详情⻚。 4）拼多多 限时秒杀→主题秒杀→多多换新家→品类活动⻚⾯（ 6品/⼩tab）→商品详情⻚。 限时秒杀→万⼈团→主题团（办公⽂教万⼈团 约100品）→商品详情⻚。 【存疑】限时秒杀→穿插楼层（家纺狂想⽇）→活动界⾯（标题显示‘品牌秒杀’）×。 5）唯品会 唯品快抢→年度品类排⾏榜→好货top榜→商品详情⻚；⾯膜榜、防晒榜、⼿机榜（品类细分太细，每 个榜单约80个，突出优质评论、使⽤感受分享）。 6）⽹易严选 限时购→专场抢购/尖货秒杀→商品详情⻚；品类⼤类：美味滋补/夏⽇出⾏（每个场景 约100个品，⽆ tab）–使⽤场景下的功能性。 7）1号店 超级单品→超级品类（10）→品类秒杀⻚⾯（约100品，后⾯的不显示‘已售’进度条）→商品详情⻚。 8）⼩⽶有品 ⼩⽶秒杀：有品牌秒杀，⽆品类。 9）⼩红书 限时购：仅有单品秒杀。 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666334487807-182ea06e-5f27-4d11-94b1-408985c79987.png#averageHue=%23f1f0ee&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=544&amp;id=uf5a3aaf5&amp;name=image.png&amp;originHeight=680&amp;originWidth=1027&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=288826&amp;status=done&amp;style=none&amp;taskId=u67c9bd4e-bb40-435f-959a-cb169bce2c0&amp;title=&amp;width=821.6" alt="image.png"></p><h2 id="_0-5-秒杀业务流程" tabindex="-1"><a class="header-anchor" href="#_0-5-秒杀业务流程" aria-hidden="true">#</a> 0.5 秒杀业务流程<img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666334511277-b2b3f148-f227-46b8-b5fb-fc28ac50d2eb.png#averageHue=%23fbfbfb&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=451&amp;id=u295c2c8f&amp;name=image.png&amp;originHeight=564&amp;originWidth=940&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=116186&amp;status=done&amp;style=none&amp;taskId=ufddb3b5f-7e8e-4abd-9f62-7117c23ac0d&amp;title=&amp;width=752" alt="image.png"></h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/8389448/1637977595866-1b9d012e-bbe4-4f8a-8dc4-b56cce0b1bdf.png#averageHue=%23fcfbfb&amp;from=url&amp;id=gRr0V&amp;originHeight=520&amp;originWidth=753&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h1 id="一、秒杀需求" tabindex="-1"><a class="header-anchor" href="#一、秒杀需求" aria-hidden="true">#</a> ⼀、秒杀需求</h1><h2 id="_1-2-需求" tabindex="-1"><a class="header-anchor" href="#_1-2-需求" aria-hidden="true">#</a> 1.2 需求</h2><p>为了加⼤促销的⼒度和加⼤⽤户的粘性，所以我们推出，每⽇秒杀特惠。 每天早上10点，开始今⽇的秒杀特惠，⽤户限购1份，秒杀商品限定5个，数量10个。订单⽀付超时时间 15分钟，超过15分钟，就⾃动取消。要求秒杀可以抗住qps1000,需要保证稳定性</p><h1 id="二、秒杀的分析" tabindex="-1"><a class="header-anchor" href="#二、秒杀的分析" aria-hidden="true">#</a> ⼆、秒杀的分析</h1><p>瞬时并发量⾼，需要保证服务器不宕机</p><h2 id="_2-1-秒杀的难点" tabindex="-1"><a class="header-anchor" href="#_2-1-秒杀的难点" aria-hidden="true">#</a> 2.1 秒杀的难点</h2><p>1.瞬时并发量⾼ 2.命中率低 3.钻空⼦，薅⽺⽑ ⽬前市⾯上针对秒杀的难点专⻔解决⽅案： **1.动态页面静态化技术 ** 基于模板引擎，提前⽣成秒杀商品单⻚的html静态⻚⾯ **2.基于Nginx实现静态资源服务器 ** nginx直接访问静态⻚⾯性能很⾼ 服务器中间件的性能：nginx(负载均衡、反向代理服务器)&gt;apache(不⽀持servlet)&gt;tomcat(⽀持jsp、 Servlet) **3.基于CDN实现静态⻚⾯缓存 ** CDN的全称是Content Delivery Network，即内容分发⽹络。CDN是在现有Internet基础上增加⼀层新 的⽹络架构，通过部署边缘服务器，采⽤负载均衡、内容分发、调度等功能，使⽤户可以就近访问获取 所需内容，从⽽解决⽹站拥塞情况，提⾼⽤户访问响应速度。 **4.基于令牌桶算法+过滤器形式实现限流 ** ⾕歌guava提供了RateLimter+全局过滤器（⽹关中⼼） **5.基于Sentinel实现限流 ** 采⽤Sentinel实现限流访问，防⽌服务器并发量过⼤，宕机 **6.基于⽹关实现访问频次限制 ** 采⽤Gateway全局过滤器实现ip或⽤户访问频次限制 **7.基于Redis预扣减库存 ** 基于Redis的预扣减库存，提升下单速度 <strong>8.基于Mysql互斥锁+分布式锁防⽌超卖</strong> mysql互斥锁，和分布式锁（Redisson的RLock）解决集群下并发访问的线程安全问题 **9.基于MQ的异步下单和订单超时 ** 使⽤RabbitMQ实现订单削峰填⾕，和订单超时⾃处理 **10.秒杀动态化，防⽌接⼝暴露 ** ⼜叫接⼝隐藏化，可以起到安全的作⽤ **11.分布式事务，保证数据⼀致性 ** 微服务开发，涉及到多个服务嵌套调⽤，那么就需要使⽤分布式事务 **12.设计模式 ** 单例、⼯⼚、策略、责任链、代理 **13.线程池 ** 原⽣线程池，单例模式（IoDH）进⾏封装</p><h2 id="_2-2-需求的分析" tabindex="-1"><a class="header-anchor" href="#_2-2-需求的分析" aria-hidden="true">#</a> 2.2 需求的分析</h2><p>分析需求，涉及到：秒杀活动、秒杀商品、秒杀订单、秒杀订单流⽔、秒杀订单⽀付、⽤户抢购表等 1.先有秒杀活动 2.再有秒杀商品 3.动态⻚⾯静态化 4.秒杀活动⻚⾯（倒计时 和商品列表和商品秒杀进度） 5.秒杀商品详情⻚ 6.订单预览 7.下单 8.⽀付 9.查看订单 秒杀活动相关的接⼝开发 秒杀商品的相关接⼝开发 ⽤户秒杀订单的相关接⼝ ⽀付接⼝相关开发</p><h2 id="_2-3-秒杀的流程" tabindex="-1"><a class="header-anchor" href="#_2-3-秒杀的流程" aria-hidden="true">#</a> 2.3 秒杀的流程</h2><p>漏⽃型业务，指的是，⽤户的请求，从客户端到 db 层，层层递减，递减的程度视业务⽽定。例如当 10w ⼈去抢 1 个物品时，db 层的请求在个位数量级，这就是⽐较理想的模型。如下图所示 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666335133674-678dc5dc-a6c0-4f9f-9b88-35d44d8a1b04.png#averageHue=%23fbfbf8&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=456&amp;id=u7fa399c2&amp;name=image.png&amp;originHeight=570&amp;originWidth=663&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=149276&amp;status=done&amp;style=none&amp;taskId=u5c70e46e-a351-42ed-8d76-461c435487d&amp;title=&amp;width=530.4" alt="image.png"></p><h1 id="三、秒杀的设计" tabindex="-1"><a class="header-anchor" href="#三、秒杀的设计" aria-hidden="true">#</a> 三、秒杀的设计</h1><h2 id="_3-1-安全设计" tabindex="-1"><a class="header-anchor" href="#_3-1-安全设计" aria-hidden="true">#</a> 3.1 安全设计</h2><p>https 接⼝验证签名 ⽹关过滤器限定访问频率 秒杀接⼝动态化</p><h2 id="_3-2-接口设计" tabindex="-1"><a class="header-anchor" href="#_3-2-接口设计" aria-hidden="true">#</a> 3.2 接⼝设计</h2><p>https通信 核⼼接⼝限流：令牌桶算法、Sentinel 单参数或没有参数 get请求， 多参数或对象全部采⽤post 统⼀返回值 接⼝⽂档：在线⽂档 接⼝请求示例： 接⼝信息、参数信息、请求示例、响应结果示例</p><h2 id="_3-3-数据库设计" tabindex="-1"><a class="header-anchor" href="#_3-3-数据库设计" aria-hidden="true">#</a> 3.3 数据库设计</h2><p>sql脚本：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">--</span> 数据库设计
<span class="token operator">--</span> 设计的数据库，满⾜需要
<span class="token operator">--</span> <span class="token number">1.</span>秒杀活动表 秒杀活动：
create table <span class="token function">t_skill_activity</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
stime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;开始时间&#39;</span><span class="token punctuation">,</span>
etime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;结束时间&#39;</span><span class="token punctuation">,</span>
title <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;标题&#39;</span><span class="token punctuation">,</span>
imgurl <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;展示图片&#39;</span><span class="token punctuation">,</span>
buys <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;限购的数量&#39;</span><span class="token punctuation">,</span>
minlevel <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;⽤户等级要求&#39;</span><span class="token punctuation">,</span>
goodsnum <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;商品数量&#39;</span><span class="token punctuation">,</span>
flag <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;标记位 <span class="token number">1.</span>未审核 <span class="token number">2.</span>审核通过 <span class="token number">3.</span>审核拒绝&#39;<span class="token punctuation">,</span>
ctime datetime comment <span class="token char">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">2.</span>秒杀商品表
create table <span class="token function">t_skill_goods</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
title <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;大标题&#39;</span><span class="token punctuation">,</span>
subtitle <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;小标题&#39;</span><span class="token punctuation">,</span>
imgurl <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;展示图片&#39;</span><span class="token punctuation">,</span>
oldprice <span class="token function">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;价格&#39;</span><span class="token punctuation">,</span>
rep <span class="token keyword">int</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;数量&#39;</span><span class="token punctuation">,</span>
detail text <span class="token constant">COMMENT</span> <span class="token char">&#39;描述&#39;</span><span class="token punctuation">,</span>
flag <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;标记位 <span class="token number">1.</span>未审核 <span class="token number">2.</span>审核通过 <span class="token number">3.</span>审核失败 <span class="token number">4.</span>上架 <span class="token number">5.</span>下架&#39;<span class="token punctuation">,</span>
ctime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
utime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;更新时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">3.</span>秒杀活动商品表
create table <span class="token function">t_acivity_goods</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
said bigint <span class="token constant">COMMENT</span> <span class="token char">&#39;活动id&#39;</span><span class="token punctuation">,</span>
sgid bigint <span class="token constant">COMMENT</span> <span class="token char">&#39;商品id&#39;</span><span class="token punctuation">,</span>
skillprice <span class="token function">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;秒杀的价钱&#39;</span><span class="token punctuation">,</span>
rep <span class="token keyword">int</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;数量&#39;</span><span class="token punctuation">,</span>
ctime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">4.</span>秒杀订单表
create table <span class="token function">t_skill_order</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
uid bigint <span class="token constant">COMMENT</span> <span class="token char">&#39;用户id&#39;</span><span class="token punctuation">,</span>
agid bigint <span class="token constant">COMMENT</span> &#39;秒杀活动商品id&#39;<span class="token punctuation">,</span>
paytype <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;⽀付⽅式：<span class="token number">1.</span>⽀付宝 <span class="token number">2.</span>微信&#39;<span class="token punctuation">,</span>
num <span class="token keyword">int</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;数量&#39;</span><span class="token punctuation">,</span>
price <span class="token function">decimal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> &#39;需要付款的金额&#39;<span class="token punctuation">,</span>
aid <span class="token keyword">int</span> <span class="token constant">COMMENT</span> &#39;收货地址 id&#39;<span class="token punctuation">,</span>
paymoney <span class="token function">decimal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
flag <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;订单状态 <span class="token number">1.</span>未⽀付 <span class="token number">2.</span>⽀付成功 <span class="token number">3.</span>⽀付失败 <span class="token number">4.</span>⽀付超时 <span class="token number">5.</span>取消订单&#39;<span class="token punctuation">,</span>
ctime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">5.</span>秒杀订单流⽔表
create table <span class="token function">t_skill_orderlog</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
soid bigint <span class="token constant">COMMENT</span> &#39;秒杀订单的id&#39;<span class="token punctuation">,</span>
type <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;订单状态 <span class="token number">1.</span>未⽀付 <span class="token number">2.</span>⽀付成功 <span class="token number">3.</span>⽀付失败 <span class="token number">4.</span>⽀付超时 <span class="token number">5.</span>取消订单&#39;<span class="token punctuation">,</span>
info <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token constant">COMMENT</span> <span class="token char">&#39;备注&#39;</span><span class="token punctuation">,</span>
ctime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">6.</span>⽤户秒杀记录表
create table <span class="token function">t_user_skill</span><span class="token punctuation">(</span>
id bigint <span class="token constant">PRIMARY</span> <span class="token class-name">KEY</span> auto_increment<span class="token punctuation">,</span>
agid bigint <span class="token constant">COMMENT</span> &#39;秒杀活动商品id&#39;<span class="token punctuation">,</span>
uid bigint <span class="token constant">COMMENT</span> <span class="token char">&#39;用户id&#39;</span><span class="token punctuation">,</span>
flag <span class="token constant">TINYINT</span> <span class="token constant">COMMENT</span> &#39;本次秒杀结果：<span class="token number">1.</span>没抢到 <span class="token number">2.</span>抢到了&#39;<span class="token punctuation">,</span>
info <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>
ctime datetime <span class="token constant">COMMENT</span> <span class="token char">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> <span class="token number">7.</span>秒杀订单⽀付表
<span class="token operator">--</span> <span class="token number">8.</span>秒杀订单⽀付流⽔表
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-4-技术选型" tabindex="-1"><a class="header-anchor" href="#_3-4-技术选型" aria-hidden="true">#</a> 3.4 技术选型</h2><p>⽅案⼀：单体 SpringBoot（SSM）+RabbitMQ+Redis(Jedis+Redssion)+设计模式+线程池+模板引擎+分布式锁+分布 式事务…… ⽅案⼆：微服务 **SpringCloudAlibaba(Nacos、OpenFeign、Sentinel、 ** **Gateway)+RabbitMQ+Redis(Jedis+Redssion)+设计模式+线程池+模板引擎+分布式锁+分布式事务…… **</p><h1 id="四、秒杀的后端" tabindex="-1"><a class="header-anchor" href="#四、秒杀的后端" aria-hidden="true">#</a> 四、秒杀的后端</h1><h2 id="_4-1实现活动操作" tabindex="-1"><a class="header-anchor" href="#_4-1实现活动操作" aria-hidden="true">#</a> 4.1实现活动操作</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666444079914-3c7c4a09-97e3-4e72-9d63-fb4a288884c2.png#averageHue=%23b2a174&amp;clientId=uf629a243-ae7f-4&amp;from=paste&amp;height=442&amp;id=u04e41a10&amp;name=image.png&amp;originHeight=553&amp;originWidth=1124&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=52272&amp;status=done&amp;style=none&amp;taskId=u0cdc4b56-3290-410c-830b-5f746e5e305&amp;title=&amp;width=899.2" alt="image.png"> 新增活动之后，进行审核审核通过之后，修改状态</p><h2 id="_4-2实现商品操作" tabindex="-1"><a class="header-anchor" href="#_4-2实现商品操作" aria-hidden="true">#</a> 4.2实现商品操作</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666444367930-4dc02e56-6143-4ed9-9fba-4eed45b7df35.png#averageHue=%23bda979&amp;clientId=uf629a243-ae7f-4&amp;from=paste&amp;height=290&amp;id=uc65841b4&amp;name=image.png&amp;originHeight=363&amp;originWidth=1458&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=52651&amp;status=done&amp;style=none&amp;taskId=udc031968-d4d6-4892-a3b2-4863e0386ca&amp;title=&amp;width=1166.4" alt="image.png"> 新增商品之后，进行审核审核通过之后，修改状态</p><h2 id="_4-3实现在活动中添加商品" tabindex="-1"><a class="header-anchor" href="#_4-3实现在活动中添加商品" aria-hidden="true">#</a> 4.3实现在活动中添加商品</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666444539472-a58e67ff-0827-423b-87f8-fe9e6eee582b.png#averageHue=%23c3b082&amp;clientId=uf629a243-ae7f-4&amp;from=paste&amp;height=360&amp;id=ubf8cafaf&amp;name=image.png&amp;originHeight=450&amp;originWidth=1332&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=72035&amp;status=done&amp;style=none&amp;taskId=u7e1237d6-1f7a-4f48-8add-cbfc846c12a&amp;title=&amp;width=1065.6" alt="image.png"> 添加成功之后，执行RabbitMQ实现基于模板的动态页面静态化 -MQ 异步 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666444700218-6efa53d8-1cb5-4831-b011-7210803fd737.png#averageHue=%235f6651&amp;clientId=uf629a243-ae7f-4&amp;from=paste&amp;height=556&amp;id=uce4150a2&amp;name=image.png&amp;originHeight=695&amp;originWidth=1880&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=183839&amp;status=done&amp;style=none&amp;taskId=u306cffde-fbce-4059-8cf6-ef719a4f7e9&amp;title=&amp;width=1504" alt="image.png"> 一般添加完之后是确保不会在修改了，所以使用了静态页面来提高性能<img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666444712992-32412db9-d594-492e-ae58-a7e84920f909.png#averageHue=%23faf9f9&amp;clientId=uf629a243-ae7f-4&amp;from=paste&amp;height=629&amp;id=u203939a4&amp;name=image.png&amp;originHeight=786&amp;originWidth=1342&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=172344&amp;status=done&amp;style=none&amp;taskId=u46179d6f-91f5-4676-b6cf-104797b81b8&amp;title=&amp;width=1073.6" alt="image.png"></p><h1 id="五、分布式🔒-rlock红锁" tabindex="-1"><a class="header-anchor" href="#五、分布式🔒-rlock红锁" aria-hidden="true">#</a> 五、分布式🔒 RLock红锁</h1><p>Redis如何实现分布式锁：RedLock(红锁) Redis作者写的分布式锁 Redssion(看⻔狗)-RLock(红锁，分布式锁) //获取分布式锁 底层原理：Lock+Redis 命令 setnx+Lua脚本 public static RLock getLock(String key){ return <em>client</em>.getLock(key); }</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>redisson<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>redisson<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.16</span><span class="token number">.4</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
       <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>alibaba<span class="token operator">-</span>seata<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.1</span><span class="token number">.0</span><span class="token punctuation">.</span><span class="token constant">RELEASE</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GlobalTransactional</span><span class="token comment">//分布式事务，涉及到服务的嵌套调用 秒杀服务调用支付服务，保障多服务的数据一致性</span>
添加分布式锁 加锁成功，才可购买，失败，禁止购买
<span class="token class-name">RLock</span> lock <span class="token operator">=</span> <span class="token class-name">RedissonUtil</span><span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">SKILL_LOCK</span> <span class="token operator">+</span> dto<span class="token punctuation">.</span><span class="token function">getAgid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//释放锁</span>
lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="六、秒杀接口动态化" tabindex="-1"><a class="header-anchor" href="#六、秒杀接口动态化" aria-hidden="true">#</a> 六、秒杀接口动态化</h1><p>1.生成动态化接口，参数要和原方法一致 将路径存入redis，并返回 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666759347066-661cc523-5c03-4b65-bae3-4402dc02cabc.png#averageHue=%232d2d2c&amp;clientId=ua48a7543-03d0-4&amp;from=paste&amp;height=534&amp;id=u63bad2da&amp;name=image.png&amp;originHeight=668&amp;originWidth=1317&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=95863&amp;status=done&amp;style=none&amp;taskId=ue9260866-121b-464a-bb59-585f5ab4f69&amp;title=&amp;width=1053.6" alt="image.png"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**秒杀接口动态化*/</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">createPath</span><span class="token punctuation">(</span><span class="token class-name">SkillOrderAddDto</span> dto<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1.参数校验</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dto<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//2.验证活动</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">SKILL_ACTIVITY</span><span class="token operator">+</span>dto<span class="token punctuation">.</span><span class="token function">getSaid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//3.用户是否购买</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">existsHash</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">SKILL_ORDER</span><span class="token punctuation">,</span>dto<span class="token punctuation">.</span><span class="token function">getAgid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;不能重复购买&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">//4.生成专属的一次性的秒杀路径</span>
                      <span class="token class-name">String</span> path<span class="token operator">=</span> <span class="token class-name">PassUtils</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>uid<span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token comment">//5.保存到redis中，有效期1秒</span>
                      <span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_SKILL_PATH</span><span class="token operator">+</span>uid<span class="token punctuation">,</span>path<span class="token punctuation">,</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_SKILL_PATH_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.实现 根据返回的path做动态路径，相当于一个请求里套了一层，在进行redis比较，防止恶意请求。 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666759494053-784917eb-367e-4c7b-b228-1b423c7b8e50.png#averageHue=%232d2c2b&amp;clientId=ua48a7543-03d0-4&amp;from=paste&amp;height=385&amp;id=u68370c8b&amp;name=image.png&amp;originHeight=481&amp;originWidth=1226&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=88822&amp;status=done&amp;style=none&amp;taskId=ub9f5a185-b95a-4e3d-b5f7-cbe0e5b3233&amp;title=&amp;width=980.8" alt="image.png"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;createurl.do&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">createUrl</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SkillOrderAddDto</span> add<span class="token punctuation">,</span> <span class="token keyword">long</span> uid<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> service<span class="token punctuation">.</span><span class="token function">createPath</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{path}/create.do&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SkillOrderAddDto</span> add<span class="token punctuation">,</span><span class="token keyword">long</span> uid<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//1.验证路径是否正确</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_SKILL_PATH</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//2.验证随机路径是否为我们生成的</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_SKILL_PATH</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> service<span class="token punctuation">.</span><span class="token function">saveRedis</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;亲，秒杀已结束！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="熔断降级-redisson可以序列化存储对象" tabindex="-1"><a class="header-anchor" href="#熔断降级-redisson可以序列化存储对象" aria-hidden="true">#</a> 熔断降级 redisson可以序列化存储对象</h2><p>获取秒杀订单接口 开启熔断降级 保护 防止阻塞 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666759909417-bd5fd19e-0e8a-464c-b729-57cb999847b6.png#averageHue=%232e2d2c&amp;clientId=u083a14f8-f1a2-4&amp;from=paste&amp;height=234&amp;id=u6e8ee01b&amp;name=image.png&amp;originHeight=293&amp;originWidth=943&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=44423&amp;status=done&amp;style=none&amp;taskId=u2a989efd-d3e7-4041-bd86-f52cc565038&amp;title=&amp;width=754.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666760634476-167f7589-4992-45f6-bc59-f0a523959e59.png#averageHue=%232d2c2c&amp;clientId=u083a14f8-f1a2-4&amp;from=paste&amp;height=594&amp;id=u21a0e154&amp;name=image.png&amp;originHeight=743&amp;originWidth=1067&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=115869&amp;status=done&amp;style=none&amp;taskId=u11f4289d-62d0-4542-afbe-066a1614675&amp;title=&amp;width=853.6" alt="image.png"></p><h1 id="七、访问频率限制" tabindex="-1"><a class="header-anchor" href="#七、访问频率限制" aria-hidden="true">#</a> 七、访问频率限制</h1><p>如果3秒内，访问次数超过15次，拉黑</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kz 全局过滤器 实现访问频率限制
 * <span class="token keyword">@date</span> 2022/10/26
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1.获取请求和响应对象</span>
        <span class="token class-name">ServerHttpRequest</span> request<span class="token operator">=</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServerHttpResponse</span> response<span class="token operator">=</span>exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.获取请求参数 uid</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span>request<span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> uid<span class="token operator">=</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//3.验证是否存在这个用户对应的访问频率</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_NUMS</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//4.验证访问次数是否超出规定</span>
                <span class="token keyword">int</span> v<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_NUMS</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token operator">&gt;=</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//5.超出 拉黑 Redis 没有有效期，有问题找客服</span>
                    <span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">addSet</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_BLACK</span><span class="token punctuation">,</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//6.拒绝本次请求</span>
                    <span class="token class-name">R</span> r<span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;亲，访问频率太高，非人类！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//每次只需要改变这里的内容</span>
                    response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;application/json;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//拦截并返回自定义内容</span>
                    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">writeWith</span><span class="token punctuation">(</span>
                            <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">bufferFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                    <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">//7.自增请求次数+1</span>
                    <span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">incr</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_NUMS</span><span class="token operator">+</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//8. 3秒内的第一次</span>
                <span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_NUMS</span><span class="token operator">+</span>uid<span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_NUMS_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="八、黑名单过滤" tabindex="-1"><a class="header-anchor" href="#八、黑名单过滤" aria-hidden="true">#</a> 八、黑名单过滤</h1><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kz 黑名单 拦截请求
 * <span class="token keyword">@date</span> 2022/10/25
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlackFilter</span>  <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServerHttpRequest</span> request <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServerHttpResponse</span> response <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> uid <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">JedisUtil</span><span class="token punctuation">.</span><span class="token function">existsSet</span><span class="token punctuation">(</span><span class="token class-name">RedisKeyConfig</span><span class="token punctuation">.</span><span class="token constant">USER_BLACK</span><span class="token punctuation">,</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//黑名单 拦截请求</span>
                <span class="token class-name">R</span> r<span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;亲，你的账号，请联系客服&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//每次只需要改变这里的内容</span>
                response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;application/json;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//拦截并返回自定义内容</span>
                <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">writeWith</span><span class="token punctuation">(</span>
                        <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">bufferFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="九、基于令牌桶算法实现限流" tabindex="-1"><a class="header-anchor" href="#九、基于令牌桶算法实现限流" aria-hidden="true">#</a> <strong>九、基于令牌桶算法实现限流</strong></h1><p>令牌算法是以固定速度往⼀个桶内增加令牌，当桶内令牌满了后，就停⽌增加令牌。上游请求时，先从 桶⾥拿⼀个令牌，后端只服务有令牌的请求，所以后端处理速度不⼀定是匀速的。当有突发请求过来 时，如果令牌桶是满的，则会瞬间消耗桶中存量的令牌。如果令牌还不够，那么再等待发放令牌（固定 速度），这样就导致处理请求的速度超过发放令牌的速度。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>guava<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>guava<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">30.0</span><span class="token operator">-</span>jre<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>封装令牌桶算法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//单例模式：唯一实例，常见的实现方式：1.懒汉 2.饿汉 3.双锁-DCL 4.IoDH-静态内部类 5.枚举</span>
<span class="token comment">//封装令牌桶算法  基于guava(谷歌) 令牌桶算法</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RateLimiterSingle</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.私有化构造函数</span>
    <span class="token keyword">private</span> <span class="token class-name">RateLimiterSingle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        limiter<span class="token operator">=</span> <span class="token class-name">RateLimiter</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>maxtks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//2.静态内部类</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Signle</span><span class="token punctuation">{</span>
        <span class="token comment">//3.属性 实例化</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">RateLimiterSingle</span> single<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RateLimiterSingle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//4.公共方法获取实例</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">RateLimiterSingle</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Signle</span><span class="token punctuation">.</span>single<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxtks<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">;</span><span class="token comment">//每秒的最大令牌数</span>
    <span class="token keyword">public</span> <span class="token class-name">RateLimiter</span> limiter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kz 令牌桶
 * <span class="token keyword">@date</span> 2022/10/26
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LimitRequestFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//只拦截秒杀接口 对秒杀接口进行限流</span>
        <span class="token comment">//1.获取请求</span>
        <span class="token class-name">ServerHttpRequest</span> request<span class="token operator">=</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ServerHttpResponse</span> response<span class="token operator">=</span>exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.获取请求的url路径</span>
        <span class="token class-name">String</span> url<span class="token operator">=</span>request<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3.验证是否包含秒杀接口</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;createurl.do&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//4.限流处理 基于令牌桶算法，每秒产生800个令牌</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">RateLimiterSingle</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>limiter<span class="token punctuation">.</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//获取到令牌，那么放行</span>
                <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//拦截</span>
                <span class="token class-name">R</span> r<span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&quot;亲，秒杀结束！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//每次只需要改变这里的内容</span>
                response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;application/json;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//拦截并返回自定义内容</span>
                <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">writeWith</span><span class="token punctuation">(</span>
                        <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">bufferFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="十、流程图" tabindex="-1"><a class="header-anchor" href="#十、流程图" aria-hidden="true">#</a> 十、流程图</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666965750753-9a9e2de8-d519-4da9-b324-447d9d85ed02.png#averageHue=%23f8f8f8&amp;clientId=ue4eb82a4-086a-4&amp;from=drop&amp;id=ue45e8edd&amp;name=秒杀.drawio.png&amp;originHeight=2711&amp;originWidth=981&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=278276&amp;status=done&amp;style=none&amp;taskId=ub122ad74-a637-4efb-aa90-6a232117080&amp;title=" alt="秒杀.drawio.png"></p><h1 id="其他、项目的其他知识" tabindex="-1"><a class="header-anchor" href="#其他、项目的其他知识" aria-hidden="true">#</a> 其他、项⽬的其他知识</h1><h2 id="spu-和sku" tabindex="-1"><a class="header-anchor" href="#spu-和sku" aria-hidden="true">#</a> SPU 和SKU</h2><p>不同的商品类型，商品的属性各不相同，所以为了解决全品类购物平台的商品属性的问题，提出了SPU 和SKU SPU：商品属性，就是指的商品的具体的⼀个个的属性信息，⽐如产地，材质等 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666335284086-9b980c23-fefd-4efb-8245-9f8222fd3712.png#averageHue=%23faf8f6&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=266&amp;id=uc9d4ebca&amp;name=image.png&amp;originHeight=333&amp;originWidth=1044&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=142000&amp;status=done&amp;style=none&amp;taskId=u30f210fc-43fa-4c21-afd1-61e597b6086&amp;title=&amp;width=835.2" alt="image.png"> SKU：商品属性，会影响库存的商品属性，⽐如：颜⾊、尺码、容量、⾊号、内存等 <img src="https://cdn.nlark.com/yuque/0/2022/png/32843666/1666335317010-1bb864fe-2ec1-46d1-becd-0202f45bd712.png#averageHue=%23f3e2e1&amp;clientId=u6c544dd2-7abb-4&amp;from=paste&amp;height=324&amp;id=u72427748&amp;name=image.png&amp;originHeight=405&amp;originWidth=770&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=133241&amp;status=done&amp;style=none&amp;taskId=ucdfac14e-8086-4702-b5d3-7bd9f37e949&amp;title=&amp;width=616" alt="image.png"></p>`,67),c=[e];function o(i,l){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","Seckill.html.vue"]]);export{k as default};
